

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.DefaultCaret;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HK
 */
public class NewJFrameokno extends javax.swing.JFrame {

    public int dodane;
    /**
     * Creates new form NewJFrameokno
     */
    public NewJFrameokno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jFileChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Szyfruj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Deszyfruj");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Tekst do zaszyfrowania");

        jLabel3.setText("Zaszyfrowany tekst");

        jLabel4.setText("Tekst do zdeszyfrowania");

        jLabel5.setText("Zdeszyfrowany tekst");

        jButton3.setText("Wczytaj Klucz ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Wczytaj tekst");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Wczytaj tekst");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("O programie");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jScrollPane3.setViewportView(jTextArea3);

        jTextArea4.setColumns(20);
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextArea4FocusLost(evt);
            }
        });
        jScrollPane4.setViewportView(jTextArea4);

        jLabel1.setText(" Klucz ");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton8.setText("Zapisz Klucz ");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton10.setText("Zapisz tekst");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Zapisz tekst");
         jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton8)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jLabel3)
                                .addGap(2, 2, 2)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel4))
                            .addComponent(jButton10))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton11)
                                .addGap(26, 26, 26)
                                .addComponent(jButton6))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(599, 599, 599))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        JFrame parentFrame = new JFrame();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showSaveDialog(parentFrame);
        String suffix=".txt";
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if(!fileChooser.getSelectedFile().getAbsolutePath().endsWith(suffix)){
                fileToSave = new File(fileChooser.getSelectedFile() + suffix);
            }
            System.out.println("Save as file: " + fileToSave.getAbsolutePath());
            PrintWriter writer;
            try {
                writer = new PrintWriter(fileToSave, "UTF-8");
                writer.println(jTextArea1.getText());
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NewJFrameokno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(NewJFrameokno.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
    }                              
    
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        JFrame parentFrame = new JFrame();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showSaveDialog(parentFrame);
        String suffix=".txt";
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if(!fileChooser.getSelectedFile().getAbsolutePath().endsWith(suffix)){
                fileToSave = new File(fileChooser.getSelectedFile() + suffix);
            }
            System.out.println("Save as file: " + fileToSave.getAbsolutePath());
            PrintWriter writer;
            try {
                writer = new PrintWriter(fileToSave, "UTF-8");
                writer.println(jTextArea3.getText());
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NewJFrameokno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(NewJFrameokno.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
    }                            

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // parent component of the dialog
        JFrame parentFrame = new JFrame();

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Specify a file to save");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        fileChooser.setFileFilter(filter);

        int userSelection = fileChooser.showSaveDialog(parentFrame);
        String suffix=".txt";
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if(!fileChooser.getSelectedFile().getAbsolutePath().endsWith(suffix)){
                fileToSave = new File(fileChooser.getSelectedFile() + suffix);
            }
            System.out.println("Save as file: " + fileToSave.getAbsolutePath());
            PrintWriter writer;
            try {
                writer = new PrintWriter(fileToSave, "UTF-8");
                writer.println(jTextField1.getText());
                writer.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NewJFrameokno.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(NewJFrameokno.class.getName()).log(Level.SEVERE, null, ex);
            }

        }        // TODO add your handling code here:
    }                                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            

    }                                           

    private void jTextArea4FocusLost(java.awt.event.FocusEvent evt) {                                     

        //String help=jTextArea4.getText();

        //jLabel1.setText("Klucz 2 zzzz "+Integer.toString(help.length()));

        // implement the methods
        // TODO add your handling code here:
    }                                    

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
              JFrame frame = new JFrame("O Programie");
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
          JTextArea textArea = new JTextArea("SZYFR CADENUS \nO PROGRAMIE : \n ZAŁOŻENIA : \n  - KLUCZ NIE MOŻE BYĆ DŁUŻSZY OD 25 \n  - LITERY W KLUCZU NIE MOGĄ SIĘ POWTARZAZĆ  \n  - KLUCZ ORAZ TEKST JAWNY NIE MOGĄ ZAWIERAĆ LITERY \"Z\" \n DZIAŁANIE PROGRAMU : \n SZYFR CADENUS DOKONUJE PODWÓJNEJ TRANSPOZYCJI TEKSTU JAWNEGO NA PODSTAWIE \n 2 KLUCZY(1 - PODAJE UŻYTKOWNIK 2 - JEST PERMUTACJĄ UŻYTEGO ALFABETU ) \n PIERWSZEGO KLUCZA UŻYWAMY DO DOKONIANIA TRANSPOZYCJI KOLUMN WZGLĘDEM ALFABETYCZNIE \n POSORTOWANEGO KLUCZA ,DRUGIEGO KLUCZA UZYWAMY ABY DOKONAC TRANSPOZYCJI W KAZDEJ \n Z KOLUMN,TRANSPOZYCJA TA POLEGA NA PRZESUNIĘCIU POCZATKU DANEJ KOLUMNY ,ABY USTALIĆ OD \n KTÓREGO ELEMETU POWINNA ZACZYNAC SIE KOLUMNA NALEZY SPRAWDZIĆ KTÓRYM ELEMENTEM W \n KLUCZY 2 JEST ELEMENT KLUCZA 1 ODPOWIADAJACY DANEJ KOLUMNIE ,ABY DOKONAĆ DESZYFRACJI NALEZY \n WYKONAĆ ALGORYTM SZYFROWANIA W ODRÓCONEJ KOLEJNOŚCI \n NAJWAZNIEJSZE FUNKCJE: \n  - szyfruj(List<Character> textszyfrlist ,List<Character> klucz) \n  - deszyfruj(List<Character> textszyfrlist ,List<Character> klucz) \n AUTOR: HUBERT KRZEPKOWSKI  ");
                    
                textArea.setWrapStyleWord(true);
                textArea.setEditable(false);
                textArea.setFont(Font.getFont(Font.SANS_SERIF));
                textArea.setBackground(Color.LIGHT_GRAY);
                    JLabel textLabel = new JLabel("O programie",SwingConstants.CENTER); 
       textArea.setPreferredSize(new Dimension(650, 400)); 
       frame.getContentPane().add(textLabel, BorderLayout.NORTH); 
  frame.getContentPane().add(textArea, BorderLayout.NORTH); 
       //Display the window. 
       frame.setLocationRelativeTo(null); 
       frame.pack();
       frame.setVisible(true);
    }
    
        
        
        
                                            

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        jFileChooser.setFileFilter(filter);
        int odpowiedz = jFileChooser.showOpenDialog(this);
        if (odpowiedz == jFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
     
            try {
                jTextArea4.read( new FileReader( file.getAbsolutePath() ), null );
              
            } catch (IOException e) {
                System.out.println("Nie mogę otworzyć pliku: "+file.getAbsolutePath());
                System.out.println("Problem: "+e);
            }
        }        // TODO add your handling code here:
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        jFileChooser.setFileFilter(filter);
        int odpowiedz = jFileChooser.showOpenDialog(this);
        if (odpowiedz == jFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            try {
                jTextArea2.read( new FileReader( file.getAbsolutePath() ), null );
            } catch (IOException e) {
                System.out.println("Nie mogę otworzyć pliku: "+file.getAbsolutePath());
                System.out.println("Problem: "+e);
            }
        }
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
        jFileChooser.setFileFilter(filter);
        int odpowiedz = jFileChooser.showOpenDialog(this);
        if (odpowiedz == jFileChooser.APPROVE_OPTION) {
            File file = jFileChooser.getSelectedFile();
            try {
                jTextField1.read( new FileReader( file.getAbsolutePath() ), null );
            } catch (IOException e) {
                System.out.println("Nie mogę otworzyć pliku: "+file.getAbsolutePath());
                System.out.println("Problem: "+e);
            }
        }        // TODO add your handling code here:
    }                                        

   private char[] szyfruj(List<Character> textszyfrlist,List<Character> klucz){
   
        char[] klucz2 = {'A','Y','X','V','W','U','T','S','R','Q','P','O','N','M','L','K','J','I','H','G','F','E','D','C','B'} ;
            // char[] klucz2 = {'A','D','X','K','C','W','N','S','Y','E','D','T','U','B','R','G','H'};
         
           

        
       
            // String help=Integer.toString(klucz2.length);
            String k2= Arrays.toString(klucz2);
            String  k3=k2.replace(",","" );
            String  k4=k3.replace(" ","" );
            String  k5=k4.replace("[","" );
            String  k6=k5.replace("]","" );
           // jTextField4.setText(k6);
        
            List<element> kolumny;
            kolumny = new ArrayList<element>();

            for(char k:klucz){
                element e =new element(k);
                kolumny.add(e);

            }
            int x=0;
            int y=0;
            while(x<textszyfrlist.size()){
                for(element e:kolumny){
                    if(x==textszyfrlist.size())break;
                    e.settab(y,(char) textszyfrlist.get(x));
                    x++;
                }
                y++;
                if(y>=25)break;
            }
            Collections.sort(kolumny,new komparator());
     
            int i;
            for(element e:kolumny){
                for( i=0;i<klucz2.length;i++){
                    if(klucz2[i]==e.getznak()){
                        char[] tab = e.gettab();
                        for(int s=0;s<tab.length;s++){
                         if(i+s>=tab.length) break;
                            e.settabs(s,tab[i+s]);
                        }
                        for(int s=0;s<i;s++){
                            if(s>=tab.length)break;
                            e.addtabs(tab[s]);

                        }

                      
                    }
                }
            }
            System.out.print("\n");
            System.out.print("PRZED SZYFR");
            System.out.print("\n");
            for(element e:kolumny){
                char[] tab = e.gettab();
                System.out.print(":"+e.getznak()+":");
                for(char c :tab){ System.out.print(c+"");}
                System.out.print("  ");
            }
            System.out.print("\n");
            System.out.print("PO SZYFR");
            System.out.print("\n");
            for(element e:kolumny){
                List<Character> tab = e.gettabs();
                System.out.print(":"+e.getznak()+":");
                for(char c :tab){ System.out.print(c+"");}
                System.out.print("  ");
            }

            int d=0;
            char[] wynik = new char[klucz.size()*25];
            for(int f=0;f<(klucz.size()*25);f=f){
                for(element e:kolumny){
                    List<Character> l =e.gettabs();
                    if(f<l.size()){
                        wynik[d]=l.get(f);
                        d++;
                    }
                }
                f++;
            }
   
   
   
   
   return wynik;
   }
    
    private char[] deszyfruj(List<Character> textszyfrlist ,List<Character> klucz){
       char[] klucz2 = {'A','Y','X','V','W','U','T','S','R','Q','P','O','N','M','L','K','J','I','H','G','F','E','D','C','B'} ;
            //char[] klucz2 = {'A','D','X','K','C','W','N','S','Y','E','D','T','U','B','R','G','H'};
         
            List<element> kolumny = new ArrayList<>();
            List<element> kolumny2 = new ArrayList<>();
            for(char k:klucz){
                element e =new element(k);
                kolumny.add(e);
                kolumny2.add(e);

            }
            Collections.sort(kolumny,new komparator());
System.out.print(textszyfrlist.toString());
            int x=0;
            int y=0;
            while(x<textszyfrlist.size()){
                for(element e:kolumny){
                    if(x>=textszyfrlist.size()) break;
                    e.settab(y,(char) textszyfrlist.get(x));
                    x++;
                }
                y++;
            }

            int i;
            for(element e:kolumny){
                for( i=0;i<klucz2.length;i++){
                    if(klucz2[i]==e.getznak()){

                        char[] tab = e.gettab();
                        System.out.print(tab.length);
                        for(int s=0;s<tab.length;s++){
                            if(tab.length-i+s>=tab.length) break;
                            if(tab.length-i+s<0) break;
                            e.settabs(s,tab[tab.length-i+s]);
                        }
                        for(int s=0;s<tab.length-i;s++){
                            // if(s>=tab.length)break;
                            e.addtabs(tab[s]);

                        }
                    }

                }
            }
                // for(char c :tab){ System.out.print(c+" ");}
                 System.out.print("\n");
                System.out.print("PRZED DESZYFR");
                System.out.print("\n");
                for(element e:kolumny){
                List<Character> l =e.gettabs();
                System.out.print(":");
                System.out.print(e.getznak()+":");
                for(char n :l){
                    System.out.print(n+"");

                }
                 System.out.print("  ");
                }
            
           
            for(element e:kolumny){
                for(element e2:kolumny2){
                    if(e.getznak()==e2.getznak())
                    e2.setall(e.gettabs());
                }

            }

             System.out.print("\n");
            System.out.print("PO DESZYFR");
            System.out.print("\n");
            for(element e2:kolumny2){
               
                List<Character> l =e2.gettabs();
                System.out.print(":");
                System.out.print(e2.getznak()+":");
                for(char n :l){
                    System.out.print(n+"");
                }
                System.out.print("  ");
            }

            int d=0;
            char[] wynik = new char[textszyfrlist.size()];
            for(int f=0;f<klucz.size()*25;f=f){
                for(element e2:kolumny2){
                    List<Character> l =e2.gettabs();
                    if(f<l.size()&&d<wynik.length){
                        wynik[d]=l.get(f);
                        d++;
                    }
                }
                f++;
            }
    
    
    return wynik;
    }
    
    
    
    
    
    
    
    
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        String Text= jTextArea2.getText();
        String Textk= jTextField1.getText();
        if(Text.isEmpty()||Textk.isEmpty()){
            if(Text.isEmpty()){
                jTextArea2.setText("NIE PODANO TEKSTU");
                Text=jTextArea2.getText();
            }
            if(Textk.isEmpty()){
                jTextField1.setText("KEY");
                Textk= jTextField1.getText();
            
           
            }
        }else{
            String Textup = Text.toUpperCase();
            char[] Textchar = Textup.toCharArray();
            for(int i=0; i<Textchar.length;i++){
                if(Textchar[i] =='A'||Textchar[i] =='B'||Textchar[i] =='C'||Textchar[i] =='D'||Textchar[i] =='E'||Textchar[i] =='F'||
                    Textchar[i] =='G'||Textchar[i] =='H'||Textchar[i] =='I'||Textchar[i] =='J'
                    ||Textchar[i] =='K'||Textchar[i] =='L'||Textchar[i] =='M'||Textchar[i] =='N'||Textchar[i] =='O'||Textchar[i] =='P'
                    ||Textchar[i] =='Q'||Textchar[i] =='R'||Textchar[i] =='S'||Textchar[i]=='T'
                    ||Textchar[i] =='U'||Textchar[i] =='V'||Textchar[i] =='W'||Textchar[i] =='X'||Textchar[i] =='Y'||Textchar[i] =='Z'
                ){
                }else

                {
                    Textchar[i]='0';

                }
            }
            String Tex= Arrays.toString(Textchar);
            String  Textbez=Tex.replace("0","" );
            String  Textbez1=Textbez.replace(",","" );
            String  Textbez2=Textbez1.replace(" ","" );
            String  Textbez3=Textbez2.replace("[","" );
            String  Textbez4a=Textbez3.replace("\n","" );
            String  Textbez4=Textbez4a.replace("]","" );
            // jTextField2.setText(Textbez4);

            String Textupk = Textk.toUpperCase();
            char[] Textchark = Textupk.toCharArray();
            for(int i=0; i<Textchark.length;i++){
                if(Textchark[i] =='A'||Textchark[i] =='B'||Textchark[i] =='C'||Textchark[i] =='D'||Textchark[i] =='E'||Textchark[i] =='F'||
                        Textchark[i] =='G'||Textchark[i] =='H'||Textchark[i] =='I'||Textchark[i] =='J'||Textchark[i] =='K'||Textchark[i] =='L'||
                        Textchark[i] =='M'||Textchark[i] =='N'||Textchark[i] =='O'||Textchark[i] =='P'||Textchark[i] =='Q'||Textchark[i] =='R'||
                        Textchark[i] =='S'||Textchark[i]=='T'||Textchark[i] =='U'||Textchark[i] =='V'||Textchark[i] =='W'||Textchark[i] =='X'||
                        Textchark[i] =='Y'
                
                ){
                }else

                {
                    Textchark[i]='0';

                }
            }
            String Texk= Arrays.toString(Textchark);
            String  Textbezk=Texk.replace("0","" );
            String  Textbez1k=Textbezk.replace(",","" );
            String  Textbez2k=Textbez1k.replace(" ","" );
            String  Textbez3k=Textbez2k.replace("[","" );
            String  Textbez4k=Textbez3k.replace("]","" );
            // jTextField3.setText(Textbez4k);
              
            char[] textszyfr =Textbez4.toCharArray();//tekst do zaszyfrowani
            List textszyfrlist= new ArrayList<>();
            List pomoc= new ArrayList<>();
            for(char text:textszyfr){
                textszyfrlist.add(text);
                pomoc.add(text);
            }
            char[] klucz =Textbez4k.toCharArray();//klucz
             List<Character> cList = new ArrayList<>();
            for(char c : klucz) {
                cList.add(c);
            }

            List koniec=new ArrayList<>();
            char[] wynik =new char[25*cList.size()];
            if(textszyfrlist.size()>cList.size()*25){
             System.out.print(textszyfrlist.size()+"\n");
             List dofunk=new ArrayList<>();
            while(pomoc.size()>cList.size()*25){
            for(int i=0;i<cList.size()*25;i++){
            dofunk.add(pomoc.get(0));
            pomoc.remove(0);
            
             }
            wynik=deszyfruj(dofunk,cList);
            dofunk.clear();
            for(char w :wynik){
            koniec.add(w);
            }
            }
            wynik=deszyfruj(pomoc,cList);
            pomoc.clear();
             for(char w :wynik){
            koniec.add(w);
            }
             String krypto=koniec.toString();
            String  kryptob=krypto.replace(",","" );
            String  kryptobe=kryptob.replace(" ","" );
            String  kryptobez=kryptobe.replace("[","" );
            String  kryptobezz=kryptobez.replace("]","" );
            String  kryptobezzz=kryptobezz.replace("Z","" );
            jTextArea1.setText(kryptobezzz);
           
                
            
            }else{
             wynik=deszyfruj(textszyfrlist,cList);
            
            String krypto= Arrays.toString(wynik);
            String  kryptob=krypto.replace(",","" );
            String  kryptobe=kryptob.replace(" ","" );
            String  kryptobez=kryptobe.replace("[","" );
            String  kryptobezz=kryptobez.replace("]","" );
            String  kryptobezzz=kryptobezz.replace("Z","" );
            jTextArea1.setText(kryptobezzz);
            
            }
        }
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        String Text= jTextArea4.getText();
        String Textk= jTextField1.getText();
        if(Text.isEmpty()||Textk.isEmpty()){
            if(Text.isEmpty()){
                jTextArea4.setText("NIE PODANO TEKSTU");
                // Text= jTextArea4.getText();
            }
            if(Textk.isEmpty()){
                jTextField1.setText("KEY");
                //Textk= jTextField4.getText();
            }
        }else{
            String Textup = Text.toUpperCase();
            char[] Textchar = Textup.toCharArray();
            for(int i=0; i<Textchar.length;i++){
                if(Textchar[i] =='A'||Textchar[i] =='B'||Textchar[i] =='C'||Textchar[i] =='D'||Textchar[i] =='E'||Textchar[i] =='F'||
                    Textchar[i] =='G'||Textchar[i] =='H'||Textchar[i] =='I'||Textchar[i] =='J'
                    ||Textchar[i] =='K'||Textchar[i] =='L'||Textchar[i] =='M'||Textchar[i] =='N'||Textchar[i] =='O'||Textchar[i] =='P'
                    ||Textchar[i] =='Q'||Textchar[i] =='R'||Textchar[i] =='S'||Textchar[i]=='T'
                    ||Textchar[i] =='U'||Textchar[i] =='V'||Textchar[i] =='W'||Textchar[i] =='X'||Textchar[i] =='Y'
                ){
                }else

                {
                    Textchar[i]='0';

                }
            }
            String Tex= Arrays.toString(Textchar);
            String  Textbez=Tex.replace("0","" );
            String  Textbez1=Textbez.replace(",","" );
            String  Textbez2=Textbez1.replace(" ","" );
            String  Textbez3=Textbez2.replace("[","" );
            String  Textbez4a=Textbez3.replace("\n","" );
            String  Textbez4=Textbez4a.replace("]","" );
            //jTextField2.setText(Textbez4);

            String Textupk = Textk.toUpperCase();
            char[] Textchark = Textupk.toCharArray();
            for(int i=0; i<Textchark.length;i++){
                if(Textchark[i] =='A'||Textchark[i] =='B'||Textchark[i] =='C'||Textchark[i] =='D'||Textchark[i] =='E'||Textchark[i] =='F'||
                        Textchark[i] =='G'||Textchark[i] =='H'||Textchark[i] =='I'||Textchark[i] =='J'||Textchark[i] =='K'||Textchark[i] =='L'||
                        Textchark[i] =='M'||Textchark[i] =='N'||Textchark[i] =='O'||Textchark[i] =='P'||Textchark[i] =='Q'||Textchark[i] =='R'||
                        Textchark[i] =='S'||Textchark[i]=='T'||Textchark[i] =='U'||Textchark[i] =='V'||Textchark[i] =='W'||Textchark[i] =='X'||
                        Textchark[i] =='Y'
                ){}else

                {
                    Textchark[i]='0';

                }
            }
            String Texk= Arrays.toString(Textchark);
            String  Textbezk=Texk.replace("0","" );
            String  Textbez1k=Textbezk.replace(",","" );
            String  Textbez2k=Textbez1k.replace(" ","" );
            String  Textbez3k=Textbez2k.replace("[","" );
            String  Textbez4k=Textbez3k.replace("]","" );
            // jTextField3.setText(Textbez4k);
            char[] textszyfr =Textbez4.toCharArray();//tekst do zaszyfrowania
            List textszyfrlist= new ArrayList<>();
             List pomoc=new LinkedList<>();
            for(char text:textszyfr){
                textszyfrlist.add(text);
                pomoc.add(text);
            }
            char[] klucz =Textbez4k.toCharArray();//klucz
            
            List<Character> cList = new ArrayList<>();
            for(char c : klucz) {
                cList.add(c);
                
            }
             List koniec=new ArrayList<>();
            char[] wynik =new char[25*cList.size()];
            if(textszyfrlist.size()>cList.size()*25){
             System.out.print(textszyfrlist.size()+"\n");
             List dofunk=new ArrayList<>();
            while(pomoc.size()>cList.size()*25){
            for(int i=0;i<cList.size()*25;i++){
            dofunk.add(pomoc.get(0));
            pomoc.remove(0);
            
             }
            wynik=szyfruj(dofunk,cList);
            dofunk.clear();
            
            for(char w :wynik){
            koniec.add(w);
            }
            }
            wynik=szyfruj(pomoc,cList);
            pomoc.clear();
             for(char w :wynik){
            koniec.add(w);
            }
             String krypto=koniec.toString();
            String  kryptob=krypto.replace(",","" );
            String  kryptobe=kryptob.replace(" ","" );
            String  kryptobez=kryptobe.replace("[","" );
            String  kryptobezz=kryptobez.replace("]","" );
            jTextArea3.setText(kryptobezz);
            jTextArea2.setText(kryptobezz);
                
            
            }else{
             wynik=szyfruj(textszyfrlist,cList);
            
            String krypto= Arrays.toString(wynik);
            String  kryptob=krypto.replace(",","" );
            String  kryptobe=kryptob.replace(" ","" );
            String  kryptobez=kryptobe.replace("[","" );
            String  kryptobezz=kryptobez.replace("]","" );
            String  kryptobezzz=kryptobezz.replace("-","" );
            jTextArea3.setText(kryptobezzz);
            jTextArea2.setText(kryptobezzz);
            }
           

        }
    }                                        
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrameokno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrameokno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrameokno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrameokno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
         
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrameokno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JFileChooser jFileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration                   
}
